#!/bin/bash

#
# This script generates a snapraid.conf file that points to Btrfs
# snapshots for data, parity, and content files. It assumes a snapshot
# named '_snapraid_sync' exists at the root of each ocean[dp]## disk.
#

SNAPRAID_DIR=".snapraid"
SNAPSHOT_NAME=".snapraid/btrfs_checkpoint"

# --- Main Logic ---

# Use lsblk to find labels and filesystems, then pipe to awk for processing.
lsblk -n -o LABEL,FSTYPE | \
awk -v snapshot_dir="$SNAPSHOT_NAME" -v snapraid_dir="$SNAPRAID_DIR" '
# BEGIN block: Runs once at the start. Initialize variables and arrays.
BEGIN {
    d_count = 0
    p_count = 0
    delete data_disks
    delete parity_disks
    data_pattern = "^oceand[0-9][0-9]$"
    parity_pattern = "^oceanp[0-9][0-9]$"
    fstype = "btrfs"
}
# Main block: Runs for each line from lsblk, populating our disk arrays.
{
    label = $1
    fs = $2
    # Find and store data disks
    if (fs == fstype && label ~ data_pattern) {
        data_disks[d_count++] = "/mnt/" label
    }
    # Find and store parity disks
    if (fs == fstype && label ~ parity_pattern) {
        parity_disks[p_count++] = "/mnt/" label
    }
}
# END block: Runs once after all lines are processed. Print the config file.
END {
    # Sort the arrays to ensure consistent output order (d1, d2, etc.)
    asort(data_disks)
    asort(parity_disks)
    printf "# --- SnapRAID Configuration File (Snapshot-based) ---\n"
    printf "# Generated by script on %s\n", strftime("%Y-%m-%d %H:%M:%S")
    printf "# This configuration points to Btrfs snapshots for a consistent sync.\n\n"
    # --- Parity Files ---
    printf "# Parity files, pointing to snapshots.\n"
    if (p_count == 0) {
        printf "# WARNING: No parity disks (oceanp##) found! SnapRAID requires at least one.\n"
    }
    for (i = 1; i <= p_count; i++) {
        printf "parity %s/snapraid.parity\n", parity_disks[i]
    }
    printf "\n"
    # --- Content Files ---
    printf "# Content files, pointing to snapshots for maximum redundancy.\n"
    for (i = 1; i <= d_count; i++) {
        printf "content %s/%s/snapraid.content\n", data_disks[i], snapraid_dir
    }
    for (i = 1; i <= p_count; i++) {
        printf "content %s/%s/snapraid.content\n", parity_disks[i], snapraid_dir
    }
    printf "\n"
    # --- Data Disks ---
    printf "# Data disks, pointing to snapshots. Naming them d1, d2, ... is required.\n"
    if (d_count == 0) {
        printf "# WARNING: No data disks (oceand##) found!\n"
    }
    for (i = 1; i <= d_count; i++) {
        printf "data d%d %s/%s/\n", i, data_disks[i], snapshot_dir
    }
    printf "\n"
    # --- Pool Directory ---
    printf "# Point to the mergerfs pool for certain commands like scrub.\n"
    printf "pool /ocean/\n\n"
    # --- Exclusions ---
    printf "# Excludes. Add files and directories to ignore.\n"
    printf "exclude *.tmp\n"
    printf "exclude lost+found/\n"
    printf "exclude .DS_Store\n"
    printf "exclude Thumbs.db\n\n"
    # --- Other Settings ---
    printf "# Other common settings.\n"
    printf "block_size 256\n"
}
'
